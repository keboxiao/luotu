<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.buzheng.demo.esm.dao.TStandardAdressMapper">
  <resultMap id="BaseResultMap" type="org.buzheng.demo.esm.domain.TStandardAdress">
    <result column="ID" jdbcType="VARCHAR" property="id" />
    <result column="LON" jdbcType="DECIMAL" property="lon" />
    <result column="LAT" jdbcType="DECIMAL" property="lat" />
    <result column="FIVE_LEVEL_ADRESS" jdbcType="VARCHAR" property="fiveLevelAdress" />
    <result column="SEVEN_LEVEL_ADRESS" jdbcType="VARCHAR" property="sevenLevelAdress" />
    <result column="SEVEN_LEVEL_ADRESS_FULLNAME" jdbcType="VARCHAR" property="sevenLevelAdressFullname" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ID, LON, LAT, FIVE_LEVEL_ADRESS, SEVEN_LEVEL_ADRESS, SEVEN_LEVEL_ADRESS_FULLNAME
  </sql>
  <select id="selectByExample" parameterType="org.buzheng.demo.esm.domain.TStandardAdressExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from T_STANDARD_ADDRESS
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="org.buzheng.demo.esm.domain.TStandardAdressExample">
    delete from T_STANDARD_ADDRESS
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.buzheng.demo.esm.domain.TStandardAdress">
    insert into T_STANDARD_ADDRESS (ID, LON, LAT, 
      FIVE_LEVEL_ADRESS, SEVEN_LEVEL_ADRESS, SEVEN_LEVEL_ADRESS_FULLNAME
      )
    values (#{id,jdbcType=VARCHAR}, #{lon,jdbcType=DECIMAL}, #{lat,jdbcType=DECIMAL}, 
      #{fiveLevelAdress,jdbcType=VARCHAR}, #{sevenLevelAdress,jdbcType=VARCHAR}, #{sevenLevelAdressFullname,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="org.buzheng.demo.esm.domain.TStandardAdress">
    insert into T_STANDARD_ADDRESS
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="lon != null">
        LON,
      </if>
      <if test="lat != null">
        LAT,
      </if>
      <if test="fiveLevelAdress != null">
        FIVE_LEVEL_ADRESS,
      </if>
      <if test="sevenLevelAdress != null">
        SEVEN_LEVEL_ADRESS,
      </if>
      <if test="sevenLevelAdressFullname != null">
        SEVEN_LEVEL_ADRESS_FULLNAME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="lon != null">
        #{lon,jdbcType=DECIMAL},
      </if>
      <if test="lat != null">
        #{lat,jdbcType=DECIMAL},
      </if>
      <if test="fiveLevelAdress != null">
        #{fiveLevelAdress,jdbcType=VARCHAR},
      </if>
      <if test="sevenLevelAdress != null">
        #{sevenLevelAdress,jdbcType=VARCHAR},
      </if>
      <if test="sevenLevelAdressFullname != null">
        #{sevenLevelAdressFullname,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.buzheng.demo.esm.domain.TStandardAdressExample" resultType="java.lang.Long">
    select count(*) from T_STANDARD_ADDRESS
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update T_STANDARD_ADDRESS
    <set>
      <if test="record.id != null">
        ID = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.lon != null">
        LON = #{record.lon,jdbcType=DECIMAL},
      </if>
      <if test="record.lat != null">
        LAT = #{record.lat,jdbcType=DECIMAL},
      </if>
      <if test="record.fiveLevelAdress != null">
        FIVE_LEVEL_ADRESS = #{record.fiveLevelAdress,jdbcType=VARCHAR},
      </if>
      <if test="record.sevenLevelAdress != null">
        SEVEN_LEVEL_ADRESS = #{record.sevenLevelAdress,jdbcType=VARCHAR},
      </if>
      <if test="record.sevenLevelAdressFullname != null">
        SEVEN_LEVEL_ADRESS_FULLNAME = #{record.sevenLevelAdressFullname,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update T_STANDARD_ADDRESS
    set ID = #{record.id,jdbcType=VARCHAR},
      LON = #{record.lon,jdbcType=DECIMAL},
      LAT = #{record.lat,jdbcType=DECIMAL},
      FIVE_LEVEL_ADRESS = #{record.fiveLevelAdress,jdbcType=VARCHAR},
      SEVEN_LEVEL_ADRESS = #{record.sevenLevelAdress,jdbcType=VARCHAR},
      SEVEN_LEVEL_ADRESS_FULLNAME = #{record.sevenLevelAdressFullname,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>